blueprint:
  name: Pico Remote
  description: "This is for the 5 button picos that have the following model:\n\n
  PJ2-3BRL-GXX-X01 (Pico3ButtonRaiseLower)\n\nSelect an action for each button listed below. "
  domain: automation
  input:
    pico_remote:
      name: Pico Remote
      description: "Select the pico remote to configure:"
      selector:
        device:
          integration: lutron_caseta
          model: PJ2-3BRL-GXX-X01 (Pico3ButtonRaiseLower)
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
trigger:
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'on'
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'raise'
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'stop'
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'lower'
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'off'
condition: []
action:
  - choose:
      - conditions: '{{ trigger.event.data.action == "press" }}'
        sequence:
        - choose:
          - conditions: '{{ trigger.event.data.button_number == 2 }}'
            sequence:
              - service: light.turn_on
                target: !input light_target
          - conditions: '{{ trigger.event.data.button_number == 5 }}'
            sequence:
              - service: light.turn_on
                target: !input light_target
                data:
                  brightness_step_pct: 20
          - conditions: '{{ trigger.event.data.button_number == 3 }}'
            sequence:
              - service: light.toggle
                target: !input light_target
          - conditions: '{{ trigger.event.data.button_number == 6 }}'
            sequence:
              - service: light.turn_on
                target: !input light_target
                data:
                  brightness_step_pct: -20
          - conditions: '{{ trigger.event.data.button_number == 4 }}'
            sequence:
              - service: light.turn_off
                target: !input light_target
    default: []
mode: restart
